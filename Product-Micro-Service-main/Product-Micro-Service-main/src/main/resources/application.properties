spring.application.name=product-service

server.port=8080

# PostgreSQL Database Configuration
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5433/product}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:123456}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:true}
spring.jpa.properties.hibernate.format_sql=true

# Logging Configuration
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=TRACE

# Kafka Configuration - FIXED for Docker environment - ALL components use kafka:9093
spring.kafka.bootstrap-servers=kafka:9093
spring.kafka.admin.bootstrap-servers=kafka:9093

spring.kafka.producer.bootstrap-servers=kafka:9093
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.topic.name=product_topics

spring.kafka.consumer.bootstrap-servers=kafka:9093
spring.kafka.consumer.group-id=product-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Swagger/OpenAPI Configuration
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.enabled=true

springdoc.info.title=Product Service API
springdoc.info.version=1.0
springdoc.info.description=REST API documentation for the Product Service microservice.

# External Service URLs
services.cart.base-url=${SERVICES_CART_BASE_URL:http://localhost:8082}